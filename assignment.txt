Theory-
-> What is Emmet?
-> Difference between Library and Framework
-> What is CDN? Why do we use it?
-> Why React is known as react?
-> What is Cross origin in script tag?
-> What is difference between React and ReactDOM?
-> what is difference between react.development.js and react.production.js files via CDN?
-> What is async and defer

1. What is Emmet?
   Emmet is an set of plugins and essential toolkit for web developers or text-editors that are allowed to type shortcuts, that are then expanded into full piece of code for HTML and CSS

2. Difference between library and framework?
   Library - A library provides a set of helper functions/objects/modules which your application code calls for specific functionality.
   Framework = It is an abstraction in which software providing generic functionality can be selectively changed by additional user-written code, thus providing application-specific software

3. What is CDN? Why do we use it?
   A content delivery network (CDN) is a geographically distributed group of servers that caches content close to end users.A CDN allows for the quick transfer of assets needed for loading Internet content, including HTML pages, JavaScript files, stylesheets, images, and videos.The main use of a CDN is to deliver content through a network of servers in a secure and efficient way.

4. Why React is known as react?
   React is called React because it was designed to be a declarative, efficient, and flexible JavaScript library for building user interfaces, where we can use reusable components and When data in a React application changes, the components that depend on that data are automatically updated, which allows for efficient and seamless updates to the user interface. The name “React” reflects this reactive nature of the library

5. What is Cross origin in script tag?
   The crossorigin attribute sets the mode of the request to an HTTP CORS Request. The purpose of crossorigin attribute is used to share the resources from one domain to another domain. Basically, it is used to handle the CORS request. It is used to handle the CORS request that checks whether it is safe to allow for sharing the resources from other domains.

6. What is difference between React and ReactDOM?
   React is a JavaScript library for building User Interfaces whereas ReactDOM is also JavaScript library that allows React to interact with the DOM. The react package contains React.createElement(), React.Component, React.Children, and other helpers related to elements and component classes. You can think of these as the isomorphic or universal helpers that you need to build components. The react-dom package contains ReactDOM.render(), and in react-dom/server we have server-side rendering support with ReactDOMServer.renderToString() and ReactDOMServer.renderToStaticMarkup()

7. what is difference between react.development.js and react.production.js files via CDN?
   Development is the stage of an application before it's made public while production is the term used for the same application when it's made public. Development build is several times (maybe 3-5x) slower than the production build

8. What is async and defer?
   (1) Async - The async attribute is a boolean attribute. The script is downloaded in parallel to parsing the page, and executed as soon as it is available (do not block HTML DOM construction during downloading process) and don’t wait for anything.
        Syntax = <script src="app.js" async></script>
   (2) Defer - The defer attribute is a boolean attribute. The script is downloaded in parallel to parsing the page, and executed after the page has finished parsing(when browser finished DOM construction). The defer attribute tells the browser not to wait for the script. Instead, the browser will continue to process the HTML, build DOM.
        Syntax = <script src="app.js" defer></script>

Practical Coding:

1. Set up all the tools in your laptop
  => VS Code
  => Chrome
  => Extensions of Chrome
2. Create a new Git repo
3. Build your first Hello World program using,
  => Using just HTML 
  => Using JS to manipulate the DOM
  => Using React
4. use CDN Links
5. Create an Element
6. Create nested React Elements
7. Use root.render
8. Push code to Github (Theory as well as code)
9. Learn about Arrow Functions before the next class